// This script lists all workflows in vRealize Orchestrator, including their name, ID, dependencies, and whether they store credentials.
// Run this in a Scriptable Task within a vRO workflow.

var workflows = Server.findAllForType("Workflow");

for each (var wf in workflows) {
    System.log("Workflow Name: " + wf.name);
    System.log("Workflow ID: " + wf.id);

    // Check for credentials (SecureString in inputs or attributes)
    var hasCredentials = false;

    // Check inputs
    var inputs = wf.getInputParameters(); // Get workflow inputs
    if (inputs) {
        for each (var input in inputs) {
            if (input.type === "SecureString") {
                hasCredentials = true;
                break;
            }
        }
    }

    // Check attributes
    var attributes = wf.getAttributes(); // Get workflow attributes
    if (attributes && !hasCredentials) {
        for each (var attr in attributes) {
            if (attr.type === "SecureString") {
                hasCredentials = true;
                break;
            }
        }
    }

    System.log("Has Credentials: " + (hasCredentials ? "Yes" : "No"));

    // Get dependencies (actions and sub-workflows)
    var dependencies = [];
    var workflowItems = wf.getAllItems(); // Get all workflow items (schema elements)

    for each (var item in workflowItems) {
        // Check for action calls
        if (item.type === "ACTION") {
            var action = item.getAction();
            if (action) {
                dependencies.push("Action: " + action.name);
            }
        }
        // Check for nested workflows
        else if (item.type === "WORKFLOW") {
            var subWorkflow = item.getWorkflow();
            if (subWorkflow) {
                dependencies.push("Workflow: " + subWorkflow.name);
            }
        }
    }

    if (dependencies.length > 0) {
        System.log("Dependencies: " + dependencies.join(", "));
    } else {
        System.log("Dependencies: None");
    }

    System.log("-----------------------------------");
}
