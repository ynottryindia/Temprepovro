function collectAllWorkflows() {
    // Primary path
    try {
        var root = Server.getRootWorkflowCategory();
        if (root && root.allWorkflows) return root.allWorkflows;
    } catch (e) {}
    // Fallback: walk categories
    function walk(cat, bag) {
        try { for each (var wf in cat.workflows) bag.push(wf); } catch (e1) {}
        try { for each (var sub in cat.subCategories) walk(sub, bag); } catch (e2) {}
    }
    var out = [];
    var r = Server.getRootWorkflowCategory();
    if (r) walk(r, out);
    return out;
}

function csvEscape(s) {
    if (s === null || s === undefined) return "";
    return '"' + String(s).replace(/"/g, '""') + '"';
}

var all = collectAllWorkflows();
var rows = [];
rows.push(["Workflow Name", "Workflow ID", "Version", "Category Path"].join(","));
for each (var wf in all) {
    rows.push([
        csvEscape(wf.name),
        csvEscape(wf.id),
        csvEscape(wf.version),
        csvEscape(wf.categoryPath)
    ].join(","));
}
return rows.join("\n");
